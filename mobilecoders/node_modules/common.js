"use strict";
function _typeof(n) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(n) {
        return typeof n
    }
    : function(n) {
        return n && "function" == typeof Symbol && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n
    }
    )(n)
}
!function(n, e) {
    var t, a = e.document, o = n(a.getElementsByTagName("html")[0]), i = (n(a),
    (/iPad|iPhone|iPod/.test(navigator.userAgent) || !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform)) && !e.MSStream), c = "ontouchstart"in e || navigator.maxTouchPoints || e.DocumentTouch && a instanceof DocumentTouch, s = function(n) {
        return !isNaN(parseFloat(n)) && isFinite(n)
    }, l = function(n) {
        return n.stopPropagation()
    }, r = function(n) {
        return function(e) {
            e.preventDefault(),
            e.stopPropagation(),
            "function" == typeof n && n()
        }
    }, d = function(n, e, t) {
        var a = t.children()
          , o = a.length
          , i = -1 < e ? Math.max(0, Math.min(e - 1, o)) : Math.max(0, Math.min(o + e + 1, o));
        0 === i ? t.prepend(n) : a.eq(i - 1).after(n)
    }, v = function(n) {
        return -1 !== ["left", "right"].indexOf(n) ? "x" : "y"
    }, p = (t = function(n) {
        var e = ["Webkit", "Moz", "Ms", "O"]
          , t = (a.body || a.documentElement).style
          , o = n.charAt(0).toUpperCase() + n.slice(1);
        if (void 0 !== t[n])
            return n;
        for (var i = 0; i < e.length; i++)
            if (void 0 !== t[e[i] + o])
                return e[i] + o;
        return !1
    }("transform"),
    function(n, e, a) {
        if (t)
            if (0 === e)
                n.css(t, "");
            else if ("x" === v(a)) {
                var o = "left" === a ? e : -e;
                n.css(t, o ? "translate3d(".concat(o, "px,0,0)") : "")
            } else {
                var i = "top" === a ? e : -e;
                n.css(t, i ? "translate3d(0,".concat(i, "px,0)") : "")
            }
        else
            n.css(a, e)
    }
    ), f = 0;
    n.fn.extend({
        hcOffcanvasNav: function() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
            if (!this.length)
                return this;
            var t = this
              , u = n(a.body)
              , h = "side"
              , g = "position"
              , m = "option";
            e.side && (console.warn("%cHC Off-canvas Nav:%c " + m + "%c '" + h + "'%c is now deprecated and will be removed. Use%c '" + g + "'%c instead.", "color: #fa253b", "color: default", "color: #5595c6", "color: default", "color: #5595c6", "color: default"),
            e.position = e.side);
            var b = n.extend({}, {
                maxWidth: 1024,
                pushContent: !1,
                position: "left",
                levelOpen: "overlap",
                levelSpacing: 40,
                levelTitles: !1,
                navTitle: null,
                navClass: "",
                disableBody: !0,
                closeOnClick: !0,
                customToggle: null,
                insertClose: !0,
                insertBack: !0,
                labelClose: "Close",
                labelBack: "Back"
            }, e)
              , y = []
              , C = "nav-open"
              , k = function(n) {
                if (!y.length)
                    return !1;
                var e = !1;
                "string" == typeof n && (n = [n]);
                for (var t = n.length, a = 0; a < t; a++)
                    -1 !== y.indexOf(n[a]) && (e = !0);
                return e
            };
            return this.each((function() {
                var e = n(this);
                if (e.find("ul").addBack("ul").length) {
                    var h, g, m, x, O, $, T = "hc-nav-".concat(++f), w = (h = "hc-offcanvas-".concat(f, "-style"),
                    g = n('<style id="'.concat(h, '">')).appendTo(n("head")),
                    m = {},
                    x = {},
                    O = function(n) {
                        return ";" !== n.substr(-1) && (n += ";" !== n.substr(-1) ? ";" : ""),
                        n
                    }
                    ,
                    {
                        reset: function() {
                            m = {},
                            x = {}
                        },
                        add: function(n, e, t) {
                            n = n.trim(),
                            e = e.trim(),
                            t ? (x[t = t.trim()] = x[t] || {},
                            x[t][n] = O(e)) : m[n] = O(e)
                        },
                        remove: function(n, e) {
                            n = n.trim(),
                            e ? void 0 !== x[e = e.trim()][n] && delete x[e][n] : void 0 !== m[n] && delete m[n]
                        },
                        insert: function() {
                            var n = "";
                            for (var e in x) {
                                for (var t in n += "@media screen and (".concat(e, ") {\n"),
                                x[e])
                                    n += "".concat(t, " { ").concat(x[e][t], " }\n");
                                n += "}\n"
                            }
                            for (var a in m)
                                n += "".concat(a, " { ").concat(m[a], " }\n");
                            g.html(n)
                        }
                    });
                    e.addClass("hc-nav ".concat(T));
                    var S, B, N, D = n("<nav>").on("click", l), M = n('<div class="nav-container">').appendTo(D), P = null, E = {}, j = !1, q = 0, H = 0, W = 0, A = null, I = {}, L = [];
                    b.customToggle ? $ = n(b.customToggle).addClass("hc-nav-trigger ".concat(T)).on("click", K) : ($ = n('<a class="hc-nav-trigger '.concat(T, '"><span></span></a>')).on("click", K),
                    e.after($));
                    var z = function() {
                        M.css("transition", "none"),
                        H = M.outerWidth(),
                        W = M.outerHeight(),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-position-left .nav-container"), "transform: translate3d(-".concat(H, "px, 0, 0)")),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-position-right .nav-container"), "transform: translate3d(".concat(H, "px, 0, 0)")),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-position-top .nav-container"), "transform: translate3d(0, -".concat(W, "px, 0)")),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-position-bottom .nav-container"), "transform: translate3d(0, ".concat(W, "px, 0)")),
                        w.insert(),
                        M.css("transition", ""),
                        F()
                    }
                      , F = function() {
                        var n;
                        S = M.css("transition-property").split(",")[0],
                        B = parseFloat(n = M.css("transition-duration").split(",")[0]) * (/\ds$/.test(n) ? 1e3 : 1),
                        N = M.css("transition-timing-function").split(",")[0],
                        b.pushContent && P && S && w.add(function n(e) {
                            return "string" == typeof e ? e : e.attr("id") ? "#" + e.attr("id") : e.attr("class") ? e.prop("tagName").toLowerCase() + "." + e.attr("class").replace(/\s+/g, ".") : n(e.parent()) + " " + e.prop("tagName").toLowerCase()
                        }(b.pushContent), "transition: ".concat(S, " ").concat(B, "ms ").concat(N)),
                        w.insert()
                    }
                      , Q = function(e) {
                        var t = $.css("display")
                          , a = !!b.maxWidth && "max-width: ".concat(b.maxWidth - 1, "px");
                        k("maxWidth") && w.reset(),
                        w.add(".hc-offcanvas-nav.".concat(T), "display: block", a),
                        w.add(".hc-nav-trigger.".concat(T), "display: ".concat(t && "none" !== t ? t : "block"), a),
                        w.add(".hc-nav.".concat(T), "display: none", a),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-levels-overlap.nav-position-left li.level-open > .nav-wrapper"), "transform: translate3d(-".concat(b.levelSpacing, "px,0,0)"), a),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-levels-overlap.nav-position-right li.level-open > .nav-wrapper"), "transform: translate3d(".concat(b.levelSpacing, "px,0,0)"), a),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-levels-overlap.nav-position-top li.level-open > .nav-wrapper"), "transform: translate3d(0,-".concat(b.levelSpacing, "px,0)"), a),
                        w.add(".hc-offcanvas-nav.".concat(T, ".nav-levels-overlap.nav-position-bottom li.level-open > .nav-wrapper"), "transform: translate3d(0,".concat(b.levelSpacing, "px,0)"), a),
                        w.insert(),
                        (!e || e && k("pushContent")) && ("string" == typeof b.pushContent ? (P = n(b.pushContent)).length || (P = null) : P = b.pushContent instanceof jQuery ? b.pushContent : null),
                        M.css("transition", "none");
                        var o = D.hasClass(C)
                          , s = ["hc-offcanvas-nav", b.navClass || "", T, b.navClass || "", "nav-levels-" + b.levelOpen, "nav-position-" + b.position, b.disableBody ? "disable-body" : "", i ? "is-ios" : "", c ? "touch-device" : "", o ? C : ""].join(" ");
                        D.off("click").attr("class", "").addClass(s),
                        b.disableBody && D.on("click", J),
                        e ? z() : setTimeout(z, 1)
                    }
                      , _ = function() {
                        var t;
                        E = function e(t) {
                            var a = [];
                            return t.each((function() {
                                var t = n(this)
                                  , o = {
                                    classes: t.attr("class"),
                                    items: []
                                };
                                t.children("li").each((function() {
                                    var t = n(this)
                                      , a = t.children().filter((function() {
                                        var e = n(this);
                                        return e.is(":not(ul)") && !e.find("ul").length
                                    }
                                    )).add(t.contents().filter((function() {
                                        return 3 === this.nodeType && this.nodeValue.trim()
                                    }
                                    )))
                                      , i = t.find("ul")
                                      , c = i.first().add(i.first().siblings("ul"));
                                    c.length && !t.data("hc-uniqid") && t.data("hc-uniqid", Math.random().toString(36).substr(2) + "-" + Math.random().toString(36).substr(2)),
                                    o.items.push({
                                        uniqid: t.data("hc-uniqid"),
                                        classes: t.attr("class"),
                                        $content: a,
                                        subnav: c.length ? e(c) : []
                                    })
                                }
                                )),
                                a.push(o)
                            }
                            )),
                            a
                        }((t = e.find("ul").addBack("ul")).first().add(t.first().siblings("ul")))
                    }
                      , U = function(e) {
                        e && (M.empty(),
                        I = {}),
                        function e(t, a, o, i, c) {
                            var v = n('<div class="nav-wrapper nav-wrapper-'.concat(o, '">')).appendTo(a).on("click", l)
                              , p = n('<div class="nav-content">').appendTo(v);
                            if (i && p.prepend("<h2>".concat(i, "</h2>")),
                            n.each(t, (function(t, a) {
                                var i = n("<ul>").addClass(a.classes).appendTo(p);
                                n.each(a.items, (function(t, a) {
                                    var c = a.$content
                                      , s = c.find("a").addBack("a")
                                      , r = s.length ? s.clone(!0, !0).addClass("nav-item") : n('<span class="nav-item">').append(c.clone(!0, !0)).on("click", l);
                                    s.length && r.on("click", (function(n) {
                                        n.stopPropagation(),
                                        s[0].click()
                                    }
                                    )),
                                    "#" === r.attr("href") && r.on("click", (function(n) {
                                        n.preventDefault()
                                    }
                                    )),
                                    b.closeOnClick && (!1 === b.levelOpen || "none" === b.levelOpen ? r.filter("a").filter('[data-nav-close!="false"]').on("click", J) : r.filter("a").filter('[data-nav-close!="false"]').filter((function() {
                                        var e = n(this);
                                        return !a.subnav.length || e.attr("href") && "#" !== e.attr("href").charAt(0)
                                    }
                                    )).on("click", J));
                                    var d = n("<li>").addClass(a.classes).append(r);
                                    if (i.append(d),
                                    b.levelSpacing && ("expand" === b.levelOpen || !1 === b.levelOpen || "none" === b.levelOpen)) {
                                        var p = b.levelSpacing * o;
                                        p && i.css("text-indent", "".concat(p, "px"))
                                    }
                                    if (a.subnav.length) {
                                        var f = o + 1
                                          , u = a.uniqid
                                          , h = "";
                                        if (I[f] || (I[f] = 0),
                                        d.addClass("nav-parent"),
                                        !1 !== b.levelOpen && "none" !== b.levelOpen) {
                                            var g = I[f]
                                              , m = n('<span class="nav-next">').appendTo(r)
                                              , y = n('<label for="'.concat(T, "-").concat(f, "-").concat(g, '">')).on("click", l)
                                              , C = n('<input type="checkbox" id="'.concat(T, "-").concat(f, "-").concat(g, '">')).attr("data-level", f).attr("data-index", g).val(u).on("click", l).on("change", V);
                                            -1 !== L.indexOf(u) && (v.addClass("sub-level-open").on("click", (function() {
                                                return X(f, g)
                                            }
                                            )),
                                            d.addClass("level-open"),
                                            C.prop("checked", !0)),
                                            d.prepend(C),
                                            h = !0 === b.levelTitles ? c.text().trim() : "",
                                            r.attr("href") && "#" !== r.attr("href").charAt(0) ? m.append(y) : r.prepend(y.on("click", (function() {
                                                n(this).parent().trigger("click")
                                            }
                                            )))
                                        }
                                        I[f]++,
                                        e(a.subnav, d, f, h, I[f] - 1)
                                    }
                                }
                                ))
                            }
                            )),
                            o && void 0 !== c && !1 !== b.insertBack && "overlap" === b.levelOpen) {
                                var f = p.children("ul")
                                  , u = n('<li class="nav-back"><a href="#">'.concat(b.labelBack || "", "<span></span></a></li>"));
                                u.children("a").on("click", r((function() {
                                    return X(o, c)
                                }
                                ))),
                                !0 === b.insertBack ? f.first().prepend(u) : s(b.insertBack) && d(u, b.insertBack, f)
                            }
                            if (0 === o && !1 !== b.insertClose) {
                                var h = p.children("ul")
                                  , g = n('<li class="nav-close"><a href="#">'.concat(b.labelClose || "", "<span></span></a></li>"));
                                g.children("a").on("click", r(J)),
                                !0 === b.insertClose ? h.first().prepend(g) : s(b.insertClose) && d(g, b.insertClose, h.first().add(h.first().siblings("ul")))
                            }
                        }(E, M, 0, b.navTitle)
                    };
                    Q(),
                    _(),
                    U(),
                    u.append(D);
                    var R = function(e, t, a) {
                        var o = n("#".concat(T, "-").concat(e, "-").concat(t))
                          , i = o.val()
                          , c = o.parent("li")
                          , s = c.closest(".nav-wrapper");
                        if (o.prop("checked", !1),
                        s.removeClass("sub-level-open"),
                        c.removeClass("level-open"),
                        -1 !== L.indexOf(i) && L.splice(L.indexOf(i), 1),
                        a && "overlap" === b.levelOpen && (s.off("click").on("click", l),
                        p(M, (e - 1) * b.levelSpacing, b.position),
                        P)) {
                            var r = "x" === v(b.position) ? H : W;
                            p(P, r + (e - 1) * b.levelSpacing, b.position)
                        }
                    };
                    t.settings = function(n) {
                        return n ? b[n] : Object.assign({}, b)
                    }
                    ,
                    t.isOpen = function() {
                        return D.hasClass(C)
                    }
                    ,
                    t.open = G,
                    t.close = J,
                    t.update = function(e, t) {
                        if (y = [],
                        "object" === _typeof(e)) {
                            for (var a in e)
                                b[a] !== e[a] && y.push(a);
                            b = n.extend({}, b, e),
                            Q(!0),
                            U(!0)
                        }
                        (!0 === e || t) && (Q(!0),
                        _(),
                        U(!0))
                    }
                } else
                    console.error("%c! HC Offcanvas Nav:%c Menu must contain <ul> element.", "color: #fa253b", "color: default");
                function V() {
                    var e = n(this)
                      , t = Number(e.attr("data-level"))
                      , a = Number(e.attr("data-index"));
                    e.prop("checked") ? function(e, t) {
                        var a = n("#".concat(T, "-").concat(e, "-").concat(t))
                          , o = a.val()
                          , i = a.parent("li")
                          , c = i.closest(".nav-wrapper");
                        if (c.addClass("sub-level-open"),
                        i.addClass("level-open"),
                        -1 === L.indexOf(o) && L.push(o),
                        "overlap" === b.levelOpen && (c.on("click", (function() {
                            return X(e, t)
                        }
                        )),
                        p(M, e * b.levelSpacing, b.position),
                        P)) {
                            var s = "x" === v(b.position) ? H : W;
                            p(P, s + e * b.levelSpacing, b.position)
                        }
                    }(t, a) : X(t, a)
                }
                function G() {
                    if (j = !0,
                    D.css("visibility", "visible").addClass(C),
                    $.addClass("toggle-open"),
                    "expand" === b.levelOpen && A && clearTimeout(A),
                    b.disableBody && (q = o.scrollTop() || u.scrollTop(),
                    a.documentElement.scrollHeight > a.documentElement.clientHeight && o.addClass("hc-nav-yscroll"),
                    u.addClass("hc-nav-open"),
                    q && u.css("top", -q)),
                    P) {
                        var e = "x" === v(b.position) ? H : W;
                        p(P, e, b.position)
                    }
                    setTimeout((function() {
                        t.trigger("open", n.extend({}, b))
                    }
                    ), B + 1)
                }
                function J() {
                    j = !1,
                    P && p(P, 0),
                    D.removeClass(C),
                    M.removeAttr("style"),
                    $.removeClass("toggle-open"),
                    "expand" === b.levelOpen && -1 !== ["top", "bottom"].indexOf(b.position) ? X(0) : !1 !== b.levelOpen && "none" !== b.levelOpen && (A = setTimeout((function() {
                        X(0)
                    }
                    ), "expand" === b.levelOpen ? B : 0)),
                    b.disableBody && (u.removeClass("hc-nav-open"),
                    o.removeClass("hc-nav-yscroll"),
                    q && (u.css("top", "").scrollTop(q),
                    o.scrollTop(q),
                    q = 0)),
                    setTimeout((function() {
                        D.css("visibility", ""),
                        t.trigger("close.$", n.extend({}, b)),
                        t.trigger("close.once", n.extend({}, b)).off("close.once")
                    }
                    ), B + 1)
                }
                function K(n) {
                    n.preventDefault(),
                    n.stopPropagation(),
                    j ? J() : G()
                }
                function X(n, e) {
                    for (var t = n; t <= Object.keys(I).length; t++)
                        if (t == n && void 0 !== e)
                            R(n, e, !0);
                        else
                            for (var a = 0; a < I[t]; a++)
                                R(t, a, t == n)
                }
            }
            ))
        }
    })
}(jQuery, "undefined" != typeof window ? window : this),
function($) {
    var $nav = $("#main-nav")
      , $toggle = $(".toggle")
      , data = {}
      , defaultData = {
        maxWidth: !1,
        customToggle: $toggle,
        navTitle: "",
        levelTitles: !0,
        position: "left",
        insertClose: !0,
        insertBack: !0,
        labelClose: "",
        labelBack: "Back",
        pushContent: ""
    };
    let initNav = function(n) {
        var e = $(".hc-offcanvas-nav");
        setTimeout((function() {
            e.length && e.remove()
        }
        ), $toggle.hasClass("toggle-open") ? 420 : 0),
        $toggle.hasClass("toggle-open") && $toggle.click(),
        $toggle.off("click"),
        $.extend(data, n),
        $nav.clone().hcOffcanvasNav($.extend({}, defaultData, data))
    };
    initNav({}),
    $(".actions").find("a").on("click", (function(e) {
        e.preventDefault();
        var $this = $(this).addClass("active")
          , $siblings = $this.parent().siblings().children("a").removeClass("active");
        initNav(eval("(" + $this.data("demo") + ")"))
    }
    )),
    $(".actions").find("input").on("change", (function() {
        var $this = $(this)
          , data = eval("(" + $this.data("demo") + ")");
        if ($this.is(":checked"))
            initNav(data);
        else {
            var removeData = {};
            $.each(data, (function(n, e) {
                removeData[n] = !1
            }
            )),
            initNav(removeData)
        }
    }
    ))
}(jQuery),
document.addEventListener("DOMContentLoaded", (function() {
    var n = [].slice.call(document.querySelectorAll("img.lazy"));
    if ("IntersectionObserver"in window && "IntersectionObserverEntry"in window && "intersectionRatio"in window.IntersectionObserverEntry.prototype) {
        let e = new IntersectionObserver((function(n, t) {
            n.forEach((function(n) {
                if (n.isIntersecting) {
                    let t = n.target;
                    t.src = t.dataset.src,
                    t.srcset = t.dataset.srcset,
                    t.classList.remove("lazy"),
                    e.unobserve(t)
                }
            }
            ))
        }
        ));
        n.forEach((function(n) {
            e.observe(n)
        }
        ))
    }
}
)),
$(window).scroll((function() {
    $(this).scrollTop() > 4 ? $(".commonHeader").addClass("isSticky") : $(".commonHeader").removeClass("isSticky")
}
));
